The server can be in two states, either:
  - Hosting a lobby and waiting for 1-4 clients to connect.
  - Hosting a session that represents a running game.


Lobby state
===========
The server will wait for clients to connect, between 1-4.

Clients can notify the server that they are 'ready' to begin a session.

If all clients have notified the server that they are 'ready', the server will start a timer.
When the timer ends, and if all clients are still in the 'ready' state, the server will begin a session. 


Lobby state sequence
================
1. Server starts.
2. Server creates a Lobby instance.
3. Lobby creates a server socket listening on lobby port and blocks.
4. Client A connects to lobby server socket via lobby port.
5. Server notifies all clients of state of lobby.
6. Client B connects to lobby server socket via lobby port.
7. Server notifies all clients of state of lobby.
8. Client A notifies server that they are 'ready'.
9. Server notifies all clients of state of lobby.
10. Client B notifies server that they are 'ready'.
11. Server creates a new session start timer of 10 seconds.
12. Server notifies all clients of state of lobby, and that a timer has started.
13. Client B notifies server that they are no longer 'ready'.
14. Server destroys session start timer.
15. Server notifies all clients of state of lobby, and that the timer stopped.
16. Client B notifies server that they are 'ready'.
17. Server creates a new session start timer of 10 seconds.
18. Server notifies all clients of state of lobby, and that a timer has started.
19. Session timer finishes.
20. Server notifies clients that the session will begin, passing the session seed.


Classes
=======
Lobby
SessionStartTimer
Session